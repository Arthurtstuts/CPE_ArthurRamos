/* 3. Um número inteiro é considerado um número perfeito se a soma de seus fatores, incluindo 1 (mas não o número em si), for igual ao número.
Por exemplo, 6 é um número perfeito, porque 6 = 1 + 2 + 3. Escreva a função perfect que determina se o número do parâmetro é um número perfeito.
Use esta função em um código que determina e imprime todos os números perfeitos entre 1 e 1000. Imprima os fatores de cada número perfeito para confirmar que o número é realmente perfeito.
Desafie o poder do seu computador testando números muito maiores que 1000. */

#include <iostream>
using namespace std;

bool perfect (int n) {
	if (n <= 1) { // 1 não é número perfeito
        return false;
    }
    
    int i;
    int soma = 1;
    for (i =2; i <= n/2; i++){
    	if (n % i == 0) {
    		soma += i;
		}
	}
	return soma == n;
}

int main() {
    int n;
    for (n = 1; n <= 10000; n++) {
    	if (perfect(n)) {
    		cout << "Numero perfeito: " << n << " - Fatores: ";
    		for (int j; j <= n/2; j++) {
    			if (n % j == 0) {
    				cout << j << " ";
				}
			}
			cout << endl;
		}
	}
	
	return 0;
}
