#include <iostream>
#include <cstring>

using namespace std;

struct Lista {
    char valor[100];
    Lista *proximo;
};

// Função para buscar um valor na lista
Lista* buscar(Lista* cabeca, const char* k) {
    Lista* x = cabeca;
    while (x != NULL && strcmp(x->valor, k) != 0) {
        x = x->proximo;
    }
    return x;
}

// Função para inserir um novo valor na lista
void inserir(Lista*& cabeca, const char* v) {
    Lista* x = new Lista; // Aloca espaço na memória para o novo item da lista
    strcpy(x->valor, v);
    if (cabeca == NULL) {
        cabeca = x;
        x->proximo = NULL;
    } else {
        x->proximo = cabeca;
        cabeca = x;
    }
}

int main() {
    int N;
    while (true) {
        cout << "Digite o número de palavras a serem armazenadas (N = 0 para sair): ";
        cin >> N;
        if (N == 0) {
            break;
        }

        Lista* cabeca = NULL;
        char palavra[100];

        // Lê N palavras e insere na lista
        cout << "Digite " << N << " palavras:" << endl;
        for (int i = 0; i < N; ++i) {
            cin >> palavra;
            inserir(cabeca, palavra);
        }

        // Lê a palavra para busca
        cout << "Digite a palavra a ser buscada: ";
        cin >> palavra;

        // Busca a palavra na lista
        Lista* resultado = buscar(cabeca, palavra);
        if (resultado != NULL) {
            cout << "Valor " << resultado->valor << " encontrado" << endl;
        } else {
            cout << "Valor nao encontrado" << endl;
        }

        // Libera a memória alocada para a lista
        while (cabeca != NULL) {
            Lista* temp = cabeca;
            cabeca = cabeca->proximo;
            delete temp;
        }
    }
    return 0;
}